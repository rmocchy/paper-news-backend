/*
Paper-News-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ListPapers200ResponsePapersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListPapers200ResponsePapersInner{}

// ListPapers200ResponsePapersInner struct for ListPapers200ResponsePapersInner
type ListPapers200ResponsePapersInner struct {
	// The title of the paper.
	Title string `json:"title"`
	// The authors of the paper.
	Authors []string `json:"authors"`
	// The abstract of the paper.
	Abstract string `json:"abstract"`
	// The tags of the paper.
	Tags []string `json:"tags,omitempty"`
	// The URL of the paper.
	Url string `json:"url"`
	// The date the paper was published.
	PublishedAt time.Time `json:"publishedAt"`
}

type _ListPapers200ResponsePapersInner ListPapers200ResponsePapersInner

// NewListPapers200ResponsePapersInner instantiates a new ListPapers200ResponsePapersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListPapers200ResponsePapersInner(title string, authors []string, abstract string, url string, publishedAt time.Time) *ListPapers200ResponsePapersInner {
	this := ListPapers200ResponsePapersInner{}
	this.Title = title
	this.Authors = authors
	this.Abstract = abstract
	this.Url = url
	this.PublishedAt = publishedAt
	return &this
}

// NewListPapers200ResponsePapersInnerWithDefaults instantiates a new ListPapers200ResponsePapersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListPapers200ResponsePapersInnerWithDefaults() *ListPapers200ResponsePapersInner {
	this := ListPapers200ResponsePapersInner{}
	return &this
}

// GetTitle returns the Title field value
func (o *ListPapers200ResponsePapersInner) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ListPapers200ResponsePapersInner) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ListPapers200ResponsePapersInner) SetTitle(v string) {
	o.Title = v
}

// GetAuthors returns the Authors field value
func (o *ListPapers200ResponsePapersInner) GetAuthors() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Authors
}

// GetAuthorsOk returns a tuple with the Authors field value
// and a boolean to check if the value has been set.
func (o *ListPapers200ResponsePapersInner) GetAuthorsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Authors, true
}

// SetAuthors sets field value
func (o *ListPapers200ResponsePapersInner) SetAuthors(v []string) {
	o.Authors = v
}

// GetAbstract returns the Abstract field value
func (o *ListPapers200ResponsePapersInner) GetAbstract() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Abstract
}

// GetAbstractOk returns a tuple with the Abstract field value
// and a boolean to check if the value has been set.
func (o *ListPapers200ResponsePapersInner) GetAbstractOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Abstract, true
}

// SetAbstract sets field value
func (o *ListPapers200ResponsePapersInner) SetAbstract(v string) {
	o.Abstract = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ListPapers200ResponsePapersInner) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPapers200ResponsePapersInner) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ListPapers200ResponsePapersInner) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *ListPapers200ResponsePapersInner) SetTags(v []string) {
	o.Tags = v
}

// GetUrl returns the Url field value
func (o *ListPapers200ResponsePapersInner) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ListPapers200ResponsePapersInner) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ListPapers200ResponsePapersInner) SetUrl(v string) {
	o.Url = v
}

// GetPublishedAt returns the PublishedAt field value
func (o *ListPapers200ResponsePapersInner) GetPublishedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.PublishedAt
}

// GetPublishedAtOk returns a tuple with the PublishedAt field value
// and a boolean to check if the value has been set.
func (o *ListPapers200ResponsePapersInner) GetPublishedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublishedAt, true
}

// SetPublishedAt sets field value
func (o *ListPapers200ResponsePapersInner) SetPublishedAt(v time.Time) {
	o.PublishedAt = v
}

func (o ListPapers200ResponsePapersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListPapers200ResponsePapersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["title"] = o.Title
	toSerialize["authors"] = o.Authors
	toSerialize["abstract"] = o.Abstract
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	toSerialize["url"] = o.Url
	toSerialize["publishedAt"] = o.PublishedAt
	return toSerialize, nil
}

func (o *ListPapers200ResponsePapersInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"title",
		"authors",
		"abstract",
		"url",
		"publishedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListPapers200ResponsePapersInner := _ListPapers200ResponsePapersInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListPapers200ResponsePapersInner)

	if err != nil {
		return err
	}

	*o = ListPapers200ResponsePapersInner(varListPapers200ResponsePapersInner)

	return err
}

type NullableListPapers200ResponsePapersInner struct {
	value *ListPapers200ResponsePapersInner
	isSet bool
}

func (v NullableListPapers200ResponsePapersInner) Get() *ListPapers200ResponsePapersInner {
	return v.value
}

func (v *NullableListPapers200ResponsePapersInner) Set(val *ListPapers200ResponsePapersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListPapers200ResponsePapersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListPapers200ResponsePapersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListPapers200ResponsePapersInner(val *ListPapers200ResponsePapersInner) *NullableListPapers200ResponsePapersInner {
	return &NullableListPapers200ResponsePapersInner{value: val, isSet: true}
}

func (v NullableListPapers200ResponsePapersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListPapers200ResponsePapersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


